import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime

BOT_TOKEN = '7768406433:AAEFIa_06d-EfHHKXH15r19bgBxCrqYVkdE'  # ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω
ADMIN_ID = 1033527214      # ‚Üê —Å—é–¥–∞ —Å–≤–æ–π Telegram ID
YM_ACCOUNT = '4100118160340772'
PARTNER_LINK = 'https://1wbfqv.life/?open=register&p=3thr'
CRYPTO_LINK = 'https://t.me/send?start=IV2ZeQGxBqSu'

referrals = {}
discounts = {}

bot = telebot.TeleBot(BOT_TOKEN)

def main_menu(user_id):
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("üõí –ö—É–ø–∏—Ç—å", callback_data="buy"))
    markup.row(
        InlineKeyboardButton("üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã", callback_data="free_trial"),
        InlineKeyboardButton("üéü –†–µ—Ñ. —Å—Å—ã–ª–∫–∞", callback_data="ref_link")
    )
    markup.row(InlineKeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/Poderska_admi"))
    return markup

@bot.message_handler(commands=['start'])
def start(msg):
    user_id = msg.chat.id
    args = msg.text.split()
    if len(args) > 1:
        inviter_id = int(args[1])
        if inviter_id != user_id and user_id not in referrals:
            referrals[user_id] = inviter_id
            discounts[inviter_id] = discounts.get(inviter_id, 0) + 1
            try:
                bot.send_message(inviter_id,
                    "üéâ –ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n"
                    "üí∏ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞ –Ω–∞ 500‚ÇΩ.")
            except:
                pass

    text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Penalty Mind AI*!\n\n"
        "üß† *–û–ø–∏—Å–∞–Ω–∏–µ:*\n"
        "–ò–ò-–ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –≤ –∏–≥—Ä–µ Penalty Shoot-Out.\n\n"
        "üì¶ –í–Ω—É—Ç—Ä–∏:\n"
        "‚Ä¢ –ò–ò-–º–æ–¥–µ–ª—å\n‚Ä¢ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n‚Ä¢ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è\n‚Ä¢ –ê–∫—Ç–∏–≤–∞—Ü–∏—è\n\n"
        "üéÅ –ò–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ 3 –ø—Ä–æ–≥–Ω–æ–∑–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ ‚Äî –∫–Ω–æ–ø–∫–∞ –≤–Ω–∏–∑—É."
    )
    bot.send_message(user_id, text, parse_mode="Markdown", reply_markup=main_menu(user_id))

@bot.callback_query_handler(func=lambda call: call.data == "buy")
def show_payment_options(call):
    user_id = call.from_user.id
    discount_count = discounts.get(user_id, 0)
    discount = discount_count * 500
    final_amount = max(1000, 8900 - discount)

    ym_link = (
        f"https://yoomoney.ru/quickpay/shop-widget?"
        f"writer=seller&targets=Penalty+Mind+AI&default-sum={final_amount}"
        f"&button-text=14&payment-type-choice=on&hint=&successURL=&account={YM_ACCOUNT}"
    )

    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton(f"üí≥ –ÆMoney ({final_amount}‚ÇΩ)", url=ym_link),
        InlineKeyboardButton("üí∞ CryptoBot", url=CRYPTO_LINK)
    )
    markup.row(InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="check_payment"))
    markup.add(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu"))

    bot.answer_callback_query(call.id)
    bot.send_message(
        call.message.chat.id,
        f"üí∏ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞: {discount}‚ÇΩ\nüí∞ –ö –æ–ø–ª–∞—Ç–µ: {final_amount}‚ÇΩ",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data == "check_payment")
def check_payment(call):
    user = call.from_user
    dt = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    msg = (
        f"üì• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª '–Ø –æ–ø–ª–∞—Ç–∏–ª':\n"
        f"–ò–º—è: {user.first_name}\n"
        f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username}\n"
        f"ID: {user.id}\n"
        f"‚è∞ –í—Ä–µ–º—è: {dt}"
    )
    bot.send_message(ADMIN_ID, msg)
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –æ–ø–ª–∞—Ç—É –∏ –ø—Ä–∏—à–ª—ë–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É.", reply_markup=main_menu(user.id))

@bot.callback_query_handler(func=lambda call: call.data == "free_trial")
def free_trial(call):
    bot.answer_callback_query(call.id)
    text = (
        "üì≤ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å *3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–∞*:\n\n"
        "1Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ 1win –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ.\n"
        "2Ô∏è‚É£ –ê–∫–∫–∞—É–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å *–Ω–æ–≤—ã–º*.\n"
        "3Ô∏è‚É£ –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ *–ª—é–±—É—é —Å—É–º–º—É*.\n\n"
        f"üîó [–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø]({PARTNER_LINK})\n\n"
        "‚úÖ –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."
    )
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üîó –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø", url=PARTNER_LINK))
    markup.add(InlineKeyboardButton("‚úÖ –Ø –≤—ã–ø–æ–ª–Ω–∏–ª —É—Å–ª–æ–≤–∏—è", callback_data="check_trial"))
    markup.add(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu"))

    bot.send_message(call.message.chat.id, text, parse_mode="Markdown", disable_web_page_preview=True, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "check_trial")
def check_trial(call):
    user = call.from_user
    dt = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    msg = (
        f"üéÅ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã:\n"
        f"–ò–º—è: {user.first_name}\n"
        f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username}\n"
        f"ID: {user.id}\n"
        f"‚è∞ –í—Ä–µ–º—è: {dt}"
    )
    bot.send_message(ADMIN_ID, msg)
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, "üîç –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –∏ –ø—Ä–∏—à–ª—ë–º –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–≥–Ω–æ–∑–∞–º.", reply_markup=main_menu(user.id))

@bot.callback_query_handler(func=lambda call: call.data == "ref_link")
def send_ref_link(call):
    user_id = call.from_user.id
    ref_link = f"https://t.me/{bot.get_me().username}?start={user_id}"
    count = discounts.get(user_id, 0)
    discount = count * 500
    text = (
        f"üéü –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{ref_link}\n\n"
        f"üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {count}\n"
        f"üí∏ –°–∫–∏–¥–∫–∞: {discount}‚ÇΩ"
    )
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, text, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "back_to_menu")
def back_to_menu(call):
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, "üîò –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu(call.from_user.id))

bot.infinity_polling()
